owncloud:
    image: owncloud
    ports:
     - 8080:80
    volumes_from:
      - owncloud-data
    links:
     - mariadb:db
    hostname: owncloud
    domainname: owncloud.local
    restart: always
    environment:
      - VIRTUAL_HOST=${KEY_NAME}

mariadb:
    image: mariadb
    hostname: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQLPASSWORD}
    volumes_from:
      - mariadb-data
    restart: always

mariadb-data:
    image: busybox
    hostname: mariadb-data
    command: /bin/sh -c "/bin/chown -R 999 /var/lib/mysql"
    volumes:
      - /var/lib/mysql

owncloud-data:
    image: busybox
    hostname: owncloud-data
    command: /bin/sh -c "/bin/chown -R 33 /var/www/html/data && /bin/chown -R 33 /var/www/html/config"
    volumes:
      - /var/www/html/data
      - /var/www/html/config

nginx-certs:
    image: alpine
    hostname: nginx-certs
    volumes:
      - ${CERTDIR}
      - /etc/nginx/vhost.d
    command: /bin/sh -c \"echo -e \\"server_tokens off;\nclient_max_body_size 100m;\\" > /etc/nginx/vhost.d/${KEY_NAME}\"
#    command: /bin/sh -c "apk update && apk add openssl && /usr/bin/openssl genrsa -out ${CERTDIR}/${KEY_NAME}.key 1024 && /usr/bin/openssl req  -new -newkey rsa:4096 -days 365 -nodes -subj \"/C=/ST=/L=/O=/CN=${COMMON_NAME}\" -keyout ${CERTDIR}/${KEY_NAME}.key -out ${CERTDIR}/${KEY_NAME}.csr  && /usr/bin/openssl x509 -req -days 365 -in ${CERTDIR}/${KEY_NAME}.csr -signkey ${CERTDIR}/${KEY_NAME}.key -out ${CERTDIR}/${KEY_NAME}.crt"


nginx-proxy:
    image: jwilder/nginx-proxy
    hostname: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /usr/share/nginx/html
    volumes_from:
      - nginx-certs
    restart: always

nginx-letsencript:
    image: jrcs/letsencrypt-nginx-proxy-companion
    hostname: nginx-letsencript
    volumes:
      - /var/www/html/data
      - /var/www/html/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy
      - nginx-certs
